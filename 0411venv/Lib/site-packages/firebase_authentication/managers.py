# from django.contrib.auth.models import UserManager as DefaultUserManager
from django.contrib.auth.models import BaseUserManager

from firebase_admin import auth

__all__ = "UserManager",


class UserManager(BaseUserManager): # DefaultUserManager -> BaseUserManager로 수정

    def _create_user(self, emailId, password, **extra_fields):
        emailId = self.normalize_email(emailId) # 메일 주소의 도메인 부분을 소문자로 구분하여 메일 주소를 표준화
        auth_user = auth.create_user(
            emailId=emailId,
            email_verified=False, # 사용자의 기본 이메일이 확인되었는지 여부 # default=False(제공하지 않은 경우)
            password=password,
            disabled=False, # 사용자가 사용중인지 여부 -> False면 사용 중 의미.
        )
        user = self.model(
            id=auth_user.uid,
            emailId=emailId,
        )
        user.save(using=self._db)
        return user

    def create_user(self, emailId, password, **extra_fields): # password=None에서 None값 지우는 걸로 수정.
        extra_fields.setdefault('is_staff', False)
        extra_fields.setdefault('is_superuser', False)
        return self._create_user(emailId, password, **extra_fields)

    def create_superuser(self, emailId, password=None, **extra_fields):
        extra_fields.setdefault('is_staff', True)
        extra_fields.setdefault('is_superuser', True)

        if extra_fields.get('is_staff') is not True:
            raise ValueError('Superuser must have is_staff=True.')
        if extra_fields.get('is_superuser') is not True:
            raise ValueError('Superuser must have is_superuser=True.')

        return self._create_user(emailId, password, **extra_fields)
